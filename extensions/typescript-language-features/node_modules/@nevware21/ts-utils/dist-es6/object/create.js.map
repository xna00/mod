{"version":3,"file":"create.js","sourceRoot":"","sources":["../../src/object/create.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAC9E,OAAO,EAAE,OAAO,EAAE,MAAM,wBAAwB,CAAC;AAEjD,MAAM,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAEtC;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,SAAS,GAAG,UAAU,IAAI,aAAa,CAAC;AAErD;;;;;;;GAOG;AACH,MAAM,UAAU,aAAa,CAAC,GAAQ;IAClC,IAAI,CAAC,GAAG,EAAE;QACN,OAAO,EAAE,CAAC;KACb;IAED,IAAI,IAAI,GAAG,OAAO,GAAG,CAAC;IACtB,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;QACtC,MAAM,IAAI,SAAS,CAAC,2CAA2C,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;KACnF;IAED,SAAS,QAAQ,KAAI,CAAC;IACtB,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;IAE1B,OAAO,IAAK,QAAgB,EAAE,CAAC;AACnC,CAAC","sourcesContent":["/*\r\n * @nevware21/ts-utils\r\n * https://github.com/nevware21/ts-utils\r\n *\r\n * Copyright (c) 2022 Nevware21\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { FUNCTION, ObjClass, OBJECT, PROTOTYPE } from \"../internal/constants\";\r\nimport { dumpObj } from \"../helpers/diagnostics\";\r\n\r\nconst _objCreate = ObjClass[\"create\"];\r\n\r\n/**\r\n * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil\r\n * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @group Object\r\n * @param obj Object to use as a prototype. May be null\r\n */\r\nexport const objCreate = _objCreate || polyObjCreate;\r\n\r\n/**\r\n * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil\r\n * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @group Polyfill\r\n * @group Object\r\n * @param obj Object to use as a prototype. May be null\r\n */\r\nexport function polyObjCreate(obj: any): any {\r\n    if (!obj) {\r\n        return {};\r\n    }\r\n\r\n    let type = typeof obj;\r\n    if (type !== OBJECT && type !== FUNCTION) {\r\n        throw new TypeError(\"Prototype must be an Object or function: \" + dumpObj(obj));\r\n    }\r\n\r\n    function tempFunc() {}\r\n    tempFunc[PROTOTYPE] = obj;\r\n\r\n    return new (tempFunc as any)();\r\n}\r\n"]}