"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpClient = exports.FetchError = void 0;
class FetchError extends Error {
    constructor(message, responseReceived, responseOk) {
        super(message);
        this.responseReceived = responseReceived;
        this.responseOk = responseOk;
    }
}
exports.FetchError = FetchError;
class HttpClient {
    constructor(endpoint) {
        this.endpoint = endpoint;
    }
    async get(config) {
        const response = await fetch(this.endpoint, {
            method: 'GET',
            headers: config === null || config === void 0 ? void 0 : config.headers,
        });
        if (!response) {
            throw new FetchError('No response received', false);
        }
        if (!response.ok) {
            throw new FetchError('Response not ok', true, false);
        }
        const data = await response.json();
        if (!data) {
            throw new FetchError('No data received', false);
        }
        return { data };
    }
}
exports.HttpClient = HttpClient;
//# sourceMappingURL=HttpClient.js.map