{"version":3,"file":"diagnostics.js","sourceRoot":"","sources":["../../src/helpers/diagnostics.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACvE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAC;AAExD;;;;;;;;;GASG;AACH,MAAM,UAAU,OAAO,CAAC,MAAW,EAAE,MAAyB;IAC1D,IAAI,iBAAiB,GAAG,KAAK,CAAC;IAC9B,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;QACjB,iBAAiB,GAAG,YAAY,GAAG,MAAM,CAAC,KAAK,GAAG,eAAe,GAAG,MAAM,CAAC,OAAO,GAAG,YAAY,GAAG,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;KACzH;SAAM;QACH,IAAI;YACA,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;SAClH;QAAC,OAAM,CAAC,EAAE;YACP,+CAA+C;YAC/C,iBAAiB,GAAG,KAAK,GAAG,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;SAClD;KACJ;IAED,OAAO,WAAW,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,iBAAiB,CAAC;AAC1D,CAAC","sourcesContent":["/*\r\n * @nevware21/ts-utils\r\n * https://github.com/nevware21/ts-utils\r\n *\r\n * Copyright (c) 2022 Nevware21\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { EMPTY, NULL_VALUE, UNDEF_VALUE } from \"../internal/constants\";\r\nimport { isError, isNumber, objToString } from \"./base\";\r\n\r\n/**\r\n * Returns string representation of an object suitable for diagnostics logging.\r\n * @group Error\r\n * @group Diagnostic\r\n * @param object - The object to be converted to a diagnostic string value\r\n * @param format - Identifies whether the JSON value should be formated\r\n * - `true` - Format with 4 spaces\r\n * - 'number' - The number of spaces to format with\r\n * - `false` (or not Truthy) - Do not format\r\n */\r\nexport function dumpObj(object: any, format?: boolean | number): string {\r\n    let propertyValueDump = EMPTY;\r\n    if (isError(object)) {\r\n        propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n    } else {\r\n        try {\r\n            propertyValueDump = JSON.stringify(object, NULL_VALUE, format ? (isNumber(format) ? format : 4) : UNDEF_VALUE);\r\n        } catch(e) {\r\n            // Unable to convert object (probably circular)\r\n            propertyValueDump = \" - \" + dumpObj(e, format);\r\n        }\r\n    }\r\n\r\n    return objToString(object) + \": \" + propertyValueDump;\r\n}\r\n"]}