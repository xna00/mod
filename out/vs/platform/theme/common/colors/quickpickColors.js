/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
define(["require", "exports", "vs/nls", "vs/base/common/color", "vs/platform/theme/common/colorUtils", "vs/platform/theme/common/colors/editorColors", "vs/platform/theme/common/colors/listColors"], function (require, exports, nls, color_1, colorUtils_1, editorColors_1, listColors_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.quickInputListFocusBackground = exports.quickInputListFocusIconForeground = exports.quickInputListFocusForeground = exports._deprecatedQuickInputListFocusBackground = exports.pickerGroupBorder = exports.pickerGroupForeground = exports.quickInputTitleBackground = exports.quickInputForeground = exports.quickInputBackground = void 0;
    exports.quickInputBackground = (0, colorUtils_1.registerColor)('quickInput.background', { dark: editorColors_1.editorWidgetBackground, light: editorColors_1.editorWidgetBackground, hcDark: editorColors_1.editorWidgetBackground, hcLight: editorColors_1.editorWidgetBackground }, nls.localize('pickerBackground', "Quick picker background color. The quick picker widget is the container for pickers like the command palette."));
    exports.quickInputForeground = (0, colorUtils_1.registerColor)('quickInput.foreground', { dark: editorColors_1.editorWidgetForeground, light: editorColors_1.editorWidgetForeground, hcDark: editorColors_1.editorWidgetForeground, hcLight: editorColors_1.editorWidgetForeground }, nls.localize('pickerForeground', "Quick picker foreground color. The quick picker widget is the container for pickers like the command palette."));
    exports.quickInputTitleBackground = (0, colorUtils_1.registerColor)('quickInputTitle.background', { dark: new color_1.Color(new color_1.RGBA(255, 255, 255, 0.105)), light: new color_1.Color(new color_1.RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: color_1.Color.white }, nls.localize('pickerTitleBackground', "Quick picker title background color. The quick picker widget is the container for pickers like the command palette."));
    exports.pickerGroupForeground = (0, colorUtils_1.registerColor)('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hcDark: color_1.Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupForeground', "Quick picker color for grouping labels."));
    exports.pickerGroupBorder = (0, colorUtils_1.registerColor)('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hcDark: color_1.Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupBorder', "Quick picker color for grouping borders."));
    exports._deprecatedQuickInputListFocusBackground = (0, colorUtils_1.registerColor)('quickInput.list.focusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', "Please use quickInputList.focusBackground instead"));
    exports.quickInputListFocusForeground = (0, colorUtils_1.registerColor)('quickInputList.focusForeground', { dark: listColors_1.listActiveSelectionForeground, light: listColors_1.listActiveSelectionForeground, hcDark: listColors_1.listActiveSelectionForeground, hcLight: listColors_1.listActiveSelectionForeground }, nls.localize('quickInput.listFocusForeground', "Quick picker foreground color for the focused item."));
    exports.quickInputListFocusIconForeground = (0, colorUtils_1.registerColor)('quickInputList.focusIconForeground', { dark: listColors_1.listActiveSelectionIconForeground, light: listColors_1.listActiveSelectionIconForeground, hcDark: listColors_1.listActiveSelectionIconForeground, hcLight: listColors_1.listActiveSelectionIconForeground }, nls.localize('quickInput.listFocusIconForeground', "Quick picker icon foreground color for the focused item."));
    exports.quickInputListFocusBackground = (0, colorUtils_1.registerColor)('quickInputList.focusBackground', { dark: (0, colorUtils_1.oneOf)(exports._deprecatedQuickInputListFocusBackground, listColors_1.listActiveSelectionBackground), light: (0, colorUtils_1.oneOf)(exports._deprecatedQuickInputListFocusBackground, listColors_1.listActiveSelectionBackground), hcDark: null, hcLight: null }, nls.localize('quickInput.listFocusBackground', "Quick picker background color for the focused item."));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpY2twaWNrQ29sb3JzLmpzIiwic291cmNlUm9vdCI6ImZpbGU6Ly8vaG9tZS9ydW5uZXIvd29yay9tb2QvbW9kL2J1aWxkdnNjb2RlL3ZzY29kZS9zcmMvIiwic291cmNlcyI6WyJ2cy9wbGF0Zm9ybS90aGVtZS9jb21tb24vY29sb3JzL3F1aWNrcGlja0NvbG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O2dHQUdnRzs7Ozs7SUFhbkYsUUFBQSxvQkFBb0IsR0FBRyxJQUFBLDBCQUFhLEVBQUMsdUJBQXVCLEVBQ3hFLEVBQUUsSUFBSSxFQUFFLHFDQUFzQixFQUFFLEtBQUssRUFBRSxxQ0FBc0IsRUFBRSxNQUFNLEVBQUUscUNBQXNCLEVBQUUsT0FBTyxFQUFFLHFDQUFzQixFQUFFLEVBQ2hJLEdBQUcsQ0FBQyxRQUFRLENBQUMsa0JBQWtCLEVBQUUsK0dBQStHLENBQUMsQ0FBQyxDQUFDO0lBRXZJLFFBQUEsb0JBQW9CLEdBQUcsSUFBQSwwQkFBYSxFQUFDLHVCQUF1QixFQUN4RSxFQUFFLElBQUksRUFBRSxxQ0FBc0IsRUFBRSxLQUFLLEVBQUUscUNBQXNCLEVBQUUsTUFBTSxFQUFFLHFDQUFzQixFQUFFLE9BQU8sRUFBRSxxQ0FBc0IsRUFBRSxFQUNoSSxHQUFHLENBQUMsUUFBUSxDQUFDLGtCQUFrQixFQUFFLCtHQUErRyxDQUFDLENBQUMsQ0FBQztJQUV2SSxRQUFBLHlCQUF5QixHQUFHLElBQUEsMEJBQWEsRUFBQyw0QkFBNEIsRUFDbEYsRUFBRSxJQUFJLEVBQUUsSUFBSSxhQUFLLENBQUMsSUFBSSxZQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsSUFBSSxhQUFLLENBQUMsSUFBSSxZQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxhQUFLLENBQUMsS0FBSyxFQUFFLEVBQ3ZJLEdBQUcsQ0FBQyxRQUFRLENBQUMsdUJBQXVCLEVBQUUscUhBQXFILENBQUMsQ0FBQyxDQUFDO0lBRWxKLFFBQUEscUJBQXFCLEdBQUcsSUFBQSwwQkFBYSxFQUFDLHdCQUF3QixFQUMxRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsYUFBSyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLEVBQzlFLEdBQUcsQ0FBQyxRQUFRLENBQUMsdUJBQXVCLEVBQUUseUNBQXlDLENBQUMsQ0FBQyxDQUFDO0lBRXRFLFFBQUEsaUJBQWlCLEdBQUcsSUFBQSwwQkFBYSxFQUFDLG9CQUFvQixFQUNsRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsYUFBSyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLEVBQzlFLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQW1CLEVBQUUsMENBQTBDLENBQUMsQ0FBQyxDQUFDO0lBRW5FLFFBQUEsd0NBQXdDLEdBQUcsSUFBQSwwQkFBYSxFQUFDLGlDQUFpQyxFQUN0RyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsU0FBUyxFQUN2RSxHQUFHLENBQUMsUUFBUSxDQUFDLDZDQUE2QyxFQUFFLG1EQUFtRCxDQUFDLENBQUMsQ0FBQztJQUV0RyxRQUFBLDZCQUE2QixHQUFHLElBQUEsMEJBQWEsRUFBQyxnQ0FBZ0MsRUFDMUYsRUFBRSxJQUFJLEVBQUUsMENBQTZCLEVBQUUsS0FBSyxFQUFFLDBDQUE2QixFQUFFLE1BQU0sRUFBRSwwQ0FBNkIsRUFBRSxPQUFPLEVBQUUsMENBQTZCLEVBQUUsRUFDNUosR0FBRyxDQUFDLFFBQVEsQ0FBQyxnQ0FBZ0MsRUFBRSxxREFBcUQsQ0FBQyxDQUFDLENBQUM7SUFFM0YsUUFBQSxpQ0FBaUMsR0FBRyxJQUFBLDBCQUFhLEVBQUMsb0NBQW9DLEVBQ2xHLEVBQUUsSUFBSSxFQUFFLDhDQUFpQyxFQUFFLEtBQUssRUFBRSw4Q0FBaUMsRUFBRSxNQUFNLEVBQUUsOENBQWlDLEVBQUUsT0FBTyxFQUFFLDhDQUFpQyxFQUFFLEVBQzVLLEdBQUcsQ0FBQyxRQUFRLENBQUMsb0NBQW9DLEVBQUUsMERBQTBELENBQUMsQ0FBQyxDQUFDO0lBRXBHLFFBQUEsNkJBQTZCLEdBQUcsSUFBQSwwQkFBYSxFQUFDLGdDQUFnQyxFQUMxRixFQUFFLElBQUksRUFBRSxJQUFBLGtCQUFLLEVBQUMsZ0RBQXdDLEVBQUUsMENBQTZCLENBQUMsRUFBRSxLQUFLLEVBQUUsSUFBQSxrQkFBSyxFQUFDLGdEQUF3QyxFQUFFLDBDQUE2QixDQUFDLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLEVBQzVNLEdBQUcsQ0FBQyxRQUFRLENBQUMsZ0NBQWdDLEVBQUUscURBQXFELENBQUMsQ0FBQyxDQUFDIn0=