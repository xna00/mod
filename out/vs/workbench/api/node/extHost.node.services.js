/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
define(["require", "exports", "vs/platform/instantiation/common/extensions", "vs/workbench/api/node/extHostTerminalService", "vs/workbench/api/node/extHostTask", "vs/workbench/api/node/extHostDebugService", "vs/workbench/api/node/extHostSearch", "vs/workbench/api/node/extHostExtensionService", "vs/workbench/api/node/extHostTunnelService", "vs/workbench/api/common/extHostDebugService", "vs/workbench/api/common/extHostExtensionService", "vs/workbench/api/common/extHostSearch", "vs/workbench/api/common/extHostTask", "vs/workbench/api/common/extHostTerminalService", "vs/workbench/api/common/extHostTunnelService", "vs/workbench/api/common/extHostStoragePaths", "vs/workbench/api/node/extHostStoragePaths", "vs/workbench/api/node/extHostLoggerService", "vs/platform/log/common/log", "vs/workbench/api/node/extHostVariableResolverService", "vs/workbench/api/common/extHostVariableResolverService", "vs/workbench/api/common/extHostLogService", "vs/platform/instantiation/common/descriptors", "vs/platform/sign/common/sign", "vs/platform/sign/node/signService"], function (require, exports, extensions_1, extHostTerminalService_1, extHostTask_1, extHostDebugService_1, extHostSearch_1, extHostExtensionService_1, extHostTunnelService_1, extHostDebugService_2, extHostExtensionService_2, extHostSearch_2, extHostTask_2, extHostTerminalService_2, extHostTunnelService_2, extHostStoragePaths_1, extHostStoragePaths_2, extHostLoggerService_1, log_1, extHostVariableResolverService_1, extHostVariableResolverService_2, extHostLogService_1, descriptors_1, sign_1, signService_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    // #########################################################################
    // ###                                                                   ###
    // ### !!! PLEASE ADD COMMON IMPORTS INTO extHost.common.services.ts !!! ###
    // ###                                                                   ###
    // #########################################################################
    (0, extensions_1.registerSingleton)(extHostExtensionService_2.IExtHostExtensionService, extHostExtensionService_1.ExtHostExtensionService, 0 /* InstantiationType.Eager */);
    (0, extensions_1.registerSingleton)(log_1.ILoggerService, extHostLoggerService_1.ExtHostLoggerService, 1 /* InstantiationType.Delayed */);
    (0, extensions_1.registerSingleton)(log_1.ILogService, new descriptors_1.SyncDescriptor(extHostLogService_1.ExtHostLogService, [false], true));
    (0, extensions_1.registerSingleton)(sign_1.ISignService, signService_1.SignService, 1 /* InstantiationType.Delayed */);
    (0, extensions_1.registerSingleton)(extHostStoragePaths_1.IExtensionStoragePaths, extHostStoragePaths_2.ExtensionStoragePaths, 0 /* InstantiationType.Eager */);
    (0, extensions_1.registerSingleton)(extHostDebugService_2.IExtHostDebugService, extHostDebugService_1.ExtHostDebugService, 0 /* InstantiationType.Eager */);
    (0, extensions_1.registerSingleton)(extHostSearch_2.IExtHostSearch, extHostSearch_1.NativeExtHostSearch, 0 /* InstantiationType.Eager */);
    (0, extensions_1.registerSingleton)(extHostTask_2.IExtHostTask, extHostTask_1.ExtHostTask, 0 /* InstantiationType.Eager */);
    (0, extensions_1.registerSingleton)(extHostTerminalService_2.IExtHostTerminalService, extHostTerminalService_1.ExtHostTerminalService, 0 /* InstantiationType.Eager */);
    (0, extensions_1.registerSingleton)(extHostTunnelService_2.IExtHostTunnelService, extHostTunnelService_1.NodeExtHostTunnelService, 0 /* InstantiationType.Eager */);
    (0, extensions_1.registerSingleton)(extHostVariableResolverService_2.IExtHostVariableResolverProvider, extHostVariableResolverService_1.NodeExtHostVariableResolverProviderService, 0 /* InstantiationType.Eager */);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0SG9zdC5ub2RlLnNlcnZpY2VzLmpzIiwic291cmNlUm9vdCI6ImZpbGU6Ly8vaG9tZS9ydW5uZXIvd29yay9tb2QvbW9kL2J1aWxkdnNjb2RlL3ZzY29kZS9zcmMvIiwic291cmNlcyI6WyJ2cy93b3JrYmVuY2gvYXBpL25vZGUvZXh0SG9zdC5ub2RlLnNlcnZpY2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Z0dBR2dHOzs7O0lBMEJoRyw0RUFBNEU7SUFDNUUsNEVBQTRFO0lBQzVFLDRFQUE0RTtJQUM1RSw0RUFBNEU7SUFDNUUsNEVBQTRFO0lBRTVFLElBQUEsOEJBQWlCLEVBQUMsa0RBQXdCLEVBQUUsaURBQXVCLGtDQUEwQixDQUFDO0lBQzlGLElBQUEsOEJBQWlCLEVBQUMsb0JBQWMsRUFBRSwyQ0FBb0Isb0NBQTRCLENBQUM7SUFDbkYsSUFBQSw4QkFBaUIsRUFBQyxpQkFBVyxFQUFFLElBQUksNEJBQWMsQ0FBQyxxQ0FBaUIsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDckYsSUFBQSw4QkFBaUIsRUFBQyxtQkFBWSxFQUFFLHlCQUFXLG9DQUE0QixDQUFDO0lBQ3hFLElBQUEsOEJBQWlCLEVBQUMsNENBQXNCLEVBQUUsMkNBQXFCLGtDQUEwQixDQUFDO0lBRTFGLElBQUEsOEJBQWlCLEVBQUMsMENBQW9CLEVBQUUseUNBQW1CLGtDQUEwQixDQUFDO0lBQ3RGLElBQUEsOEJBQWlCLEVBQUMsOEJBQWMsRUFBRSxtQ0FBbUIsa0NBQTBCLENBQUM7SUFDaEYsSUFBQSw4QkFBaUIsRUFBQywwQkFBWSxFQUFFLHlCQUFXLGtDQUEwQixDQUFDO0lBQ3RFLElBQUEsOEJBQWlCLEVBQUMsZ0RBQXVCLEVBQUUsK0NBQXNCLGtDQUEwQixDQUFDO0lBQzVGLElBQUEsOEJBQWlCLEVBQUMsNENBQXFCLEVBQUUsK0NBQXdCLGtDQUEwQixDQUFDO0lBQzVGLElBQUEsOEJBQWlCLEVBQUMsaUVBQWdDLEVBQUUsMkVBQTBDLGtDQUEwQixDQUFDIn0=