/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
define(["require", "exports", "vs/nls", "vs/platform/contextkey/common/contextkey"], function (require, exports, nls_1, contextkey_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CONTEXT_CHAT_LOCATION = exports.CONTEXT_CHAT_INPUT_HAS_AGENT = exports.CONTEXT_CHAT_INPUT_CURSOR_AT_TOP = exports.CONTEXT_PROVIDER_EXISTS = exports.CONTEXT_IN_CHAT_SESSION = exports.CONTEXT_IN_CHAT_INPUT = exports.CONTEXT_CHAT_INPUT_HAS_FOCUS = exports.CONTEXT_CHAT_INPUT_HAS_TEXT = exports.CONTEXT_REQUEST = exports.CONTEXT_RESPONSE = exports.CONTEXT_CHAT_REQUEST_IN_PROGRESS = exports.CONTEXT_RESPONSE_FILTERED = exports.CONTEXT_CHAT_RESPONSE_SUPPORT_ISSUE_REPORTING = exports.CONTEXT_RESPONSE_DETECTED_AGENT_COMMAND = exports.CONTEXT_RESPONSE_VOTE = void 0;
    exports.CONTEXT_RESPONSE_VOTE = new contextkey_1.RawContextKey('chatSessionResponseVote', '', { type: 'string', description: (0, nls_1.localize)('interactiveSessionResponseVote', "When the response has been voted up, is set to 'up'. When voted down, is set to 'down'. Otherwise an empty string.") });
    exports.CONTEXT_RESPONSE_DETECTED_AGENT_COMMAND = new contextkey_1.RawContextKey('chatSessionResponseDetectedAgentOrCommand', false, { type: 'boolean', description: (0, nls_1.localize)('chatSessionResponseDetectedAgentOrCommand', "When the agent or command was automatically detected") });
    exports.CONTEXT_CHAT_RESPONSE_SUPPORT_ISSUE_REPORTING = new contextkey_1.RawContextKey('chatResponseSupportsIssueReporting', false, { type: 'boolean', description: (0, nls_1.localize)('chatResponseSupportsIssueReporting', "True when the current chat response supports issue reporting.") });
    exports.CONTEXT_RESPONSE_FILTERED = new contextkey_1.RawContextKey('chatSessionResponseFiltered', false, { type: 'boolean', description: (0, nls_1.localize)('chatResponseFiltered', "True when the chat response was filtered out by the server.") });
    exports.CONTEXT_CHAT_REQUEST_IN_PROGRESS = new contextkey_1.RawContextKey('chatSessionRequestInProgress', false, { type: 'boolean', description: (0, nls_1.localize)('interactiveSessionRequestInProgress', "True when the current request is still in progress.") });
    exports.CONTEXT_RESPONSE = new contextkey_1.RawContextKey('chatResponse', false, { type: 'boolean', description: (0, nls_1.localize)('chatResponse', "The chat item is a response.") });
    exports.CONTEXT_REQUEST = new contextkey_1.RawContextKey('chatRequest', false, { type: 'boolean', description: (0, nls_1.localize)('chatRequest', "The chat item is a request") });
    exports.CONTEXT_CHAT_INPUT_HAS_TEXT = new contextkey_1.RawContextKey('chatInputHasText', false, { type: 'boolean', description: (0, nls_1.localize)('interactiveInputHasText', "True when the chat input has text.") });
    exports.CONTEXT_CHAT_INPUT_HAS_FOCUS = new contextkey_1.RawContextKey('chatInputHasFocus', false, { type: 'boolean', description: (0, nls_1.localize)('interactiveInputHasFocus', "True when the chat input has focus.") });
    exports.CONTEXT_IN_CHAT_INPUT = new contextkey_1.RawContextKey('inChatInput', false, { type: 'boolean', description: (0, nls_1.localize)('inInteractiveInput', "True when focus is in the chat input, false otherwise.") });
    exports.CONTEXT_IN_CHAT_SESSION = new contextkey_1.RawContextKey('inChat', false, { type: 'boolean', description: (0, nls_1.localize)('inChat', "True when focus is in the chat widget, false otherwise.") });
    exports.CONTEXT_PROVIDER_EXISTS = new contextkey_1.RawContextKey('hasChatProvider', false, { type: 'boolean', description: (0, nls_1.localize)('hasChatProvider', "True when some chat provider has been registered.") });
    exports.CONTEXT_CHAT_INPUT_CURSOR_AT_TOP = new contextkey_1.RawContextKey('chatCursorAtTop', false);
    exports.CONTEXT_CHAT_INPUT_HAS_AGENT = new contextkey_1.RawContextKey('chatInputHasAgent', false);
    exports.CONTEXT_CHAT_LOCATION = new contextkey_1.RawContextKey('chatLocation', undefined);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhdENvbnRleHRLZXlzLmpzIiwic291cmNlUm9vdCI6ImZpbGU6Ly8vaG9tZS9ydW5uZXIvd29yay9tb2QvbW9kL2J1aWxkdnNjb2RlL3ZzY29kZS9zcmMvIiwic291cmNlcyI6WyJ2cy93b3JrYmVuY2gvY29udHJpYi9jaGF0L2NvbW1vbi9jaGF0Q29udGV4dEtleXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztnR0FHZ0c7Ozs7O0lBTW5GLFFBQUEscUJBQXFCLEdBQUcsSUFBSSwwQkFBYSxDQUFTLHlCQUF5QixFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLElBQUEsY0FBUSxFQUFDLGdDQUFnQyxFQUFFLG9IQUFvSCxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3BSLFFBQUEsdUNBQXVDLEdBQUcsSUFBSSwwQkFBYSxDQUFVLDJDQUEyQyxFQUFFLEtBQUssRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLElBQUEsY0FBUSxFQUFDLDJDQUEyQyxFQUFFLHNEQUFzRCxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzFRLFFBQUEsNkNBQTZDLEdBQUcsSUFBSSwwQkFBYSxDQUFVLG9DQUFvQyxFQUFFLEtBQUssRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLElBQUEsY0FBUSxFQUFDLG9DQUFvQyxFQUFFLCtEQUErRCxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzNRLFFBQUEseUJBQXlCLEdBQUcsSUFBSSwwQkFBYSxDQUFVLDZCQUE2QixFQUFFLEtBQUssRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLElBQUEsY0FBUSxFQUFDLHNCQUFzQixFQUFFLDZEQUE2RCxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2hPLFFBQUEsZ0NBQWdDLEdBQUcsSUFBSSwwQkFBYSxDQUFVLDhCQUE4QixFQUFFLEtBQUssRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLElBQUEsY0FBUSxFQUFDLHFDQUFxQyxFQUFFLHFEQUFxRCxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRS9PLFFBQUEsZ0JBQWdCLEdBQUcsSUFBSSwwQkFBYSxDQUFVLGNBQWMsRUFBRSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxJQUFBLGNBQVEsRUFBQyxjQUFjLEVBQUUsOEJBQThCLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDakssUUFBQSxlQUFlLEdBQUcsSUFBSSwwQkFBYSxDQUFVLGFBQWEsRUFBRSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxJQUFBLGNBQVEsRUFBQyxhQUFhLEVBQUUsNEJBQTRCLENBQUMsRUFBRSxDQUFDLENBQUM7SUFFNUosUUFBQSwyQkFBMkIsR0FBRyxJQUFJLDBCQUFhLENBQVUsa0JBQWtCLEVBQUUsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsSUFBQSxjQUFRLEVBQUMseUJBQXlCLEVBQUUsb0NBQW9DLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDak0sUUFBQSw0QkFBNEIsR0FBRyxJQUFJLDBCQUFhLENBQVUsbUJBQW1CLEVBQUUsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsSUFBQSxjQUFRLEVBQUMsMEJBQTBCLEVBQUUscUNBQXFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDck0sUUFBQSxxQkFBcUIsR0FBRyxJQUFJLDBCQUFhLENBQVUsYUFBYSxFQUFFLEtBQUssRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLElBQUEsY0FBUSxFQUFDLG9CQUFvQixFQUFFLHdEQUF3RCxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3JNLFFBQUEsdUJBQXVCLEdBQUcsSUFBSSwwQkFBYSxDQUFVLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxJQUFBLGNBQVEsRUFBQyxRQUFRLEVBQUUseURBQXlELENBQUMsRUFBRSxDQUFDLENBQUM7SUFFdkwsUUFBQSx1QkFBdUIsR0FBRyxJQUFJLDBCQUFhLENBQVUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsSUFBQSxjQUFRLEVBQUMsaUJBQWlCLEVBQUUsbURBQW1ELENBQUMsRUFBRSxDQUFDLENBQUM7SUFDbk0sUUFBQSxnQ0FBZ0MsR0FBRyxJQUFJLDBCQUFhLENBQVUsaUJBQWlCLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDeEYsUUFBQSw0QkFBNEIsR0FBRyxJQUFJLDBCQUFhLENBQVUsbUJBQW1CLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDdEYsUUFBQSxxQkFBcUIsR0FBRyxJQUFJLDBCQUFhLENBQW9CLGNBQWMsRUFBRSxTQUFTLENBQUMsQ0FBQyJ9