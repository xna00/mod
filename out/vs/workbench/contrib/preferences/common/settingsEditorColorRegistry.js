/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
define(["require", "exports", "vs/base/common/color", "vs/nls", "vs/platform/theme/common/colorRegistry", "vs/workbench/common/theme"], function (require, exports, color_1, nls_1, colorRegistry_1, theme_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.focusedRowBorder = exports.rowHoverBackground = exports.focusedRowBackground = exports.settingsNumberInputBorder = exports.settingsNumberInputForeground = exports.settingsNumberInputBackground = exports.settingsTextInputBorder = exports.settingsTextInputForeground = exports.settingsTextInputBackground = exports.settingsCheckboxBorder = exports.settingsCheckboxForeground = exports.settingsCheckboxBackground = exports.settingsSelectListBorder = exports.settingsSelectBorder = exports.settingsSelectForeground = exports.settingsSelectBackground = exports.settingsSashBorder = exports.settingsHeaderBorder = exports.modifiedItemIndicator = exports.settingsHeaderHoverForeground = exports.settingsHeaderForeground = void 0;
    // General setting colors
    exports.settingsHeaderForeground = (0, colorRegistry_1.registerColor)('settings.headerForeground', { light: '#444444', dark: '#e7e7e7', hcDark: '#ffffff', hcLight: '#292929' }, (0, nls_1.localize)('headerForeground', "The foreground color for a section header or active title."));
    exports.settingsHeaderHoverForeground = (0, colorRegistry_1.registerColor)('settings.settingsHeaderHoverForeground', { light: (0, colorRegistry_1.transparent)(exports.settingsHeaderForeground, 0.7), dark: (0, colorRegistry_1.transparent)(exports.settingsHeaderForeground, 0.7), hcDark: (0, colorRegistry_1.transparent)(exports.settingsHeaderForeground, 0.7), hcLight: (0, colorRegistry_1.transparent)(exports.settingsHeaderForeground, 0.7) }, (0, nls_1.localize)('settingsHeaderHoverForeground', "The foreground color for a section header or hovered title."));
    exports.modifiedItemIndicator = (0, colorRegistry_1.registerColor)('settings.modifiedItemIndicator', {
        light: new color_1.Color(new color_1.RGBA(102, 175, 224)),
        dark: new color_1.Color(new color_1.RGBA(12, 125, 157)),
        hcDark: new color_1.Color(new color_1.RGBA(0, 73, 122)),
        hcLight: new color_1.Color(new color_1.RGBA(102, 175, 224)),
    }, (0, nls_1.localize)('modifiedItemForeground', "The color of the modified setting indicator."));
    exports.settingsHeaderBorder = (0, colorRegistry_1.registerColor)('settings.headerBorder', { dark: theme_1.PANEL_BORDER, light: theme_1.PANEL_BORDER, hcDark: theme_1.PANEL_BORDER, hcLight: theme_1.PANEL_BORDER }, (0, nls_1.localize)('settingsHeaderBorder', "The color of the header container border."));
    exports.settingsSashBorder = (0, colorRegistry_1.registerColor)('settings.sashBorder', { dark: theme_1.PANEL_BORDER, light: theme_1.PANEL_BORDER, hcDark: theme_1.PANEL_BORDER, hcLight: theme_1.PANEL_BORDER }, (0, nls_1.localize)('settingsSashBorder', "The color of the Settings editor splitview sash border."));
    // Enum control colors
    exports.settingsSelectBackground = (0, colorRegistry_1.registerColor)(`settings.dropdownBackground`, { dark: colorRegistry_1.selectBackground, light: colorRegistry_1.selectBackground, hcDark: colorRegistry_1.selectBackground, hcLight: colorRegistry_1.selectBackground }, (0, nls_1.localize)('settingsDropdownBackground', "Settings editor dropdown background."));
    exports.settingsSelectForeground = (0, colorRegistry_1.registerColor)('settings.dropdownForeground', { dark: colorRegistry_1.selectForeground, light: colorRegistry_1.selectForeground, hcDark: colorRegistry_1.selectForeground, hcLight: colorRegistry_1.selectForeground }, (0, nls_1.localize)('settingsDropdownForeground', "Settings editor dropdown foreground."));
    exports.settingsSelectBorder = (0, colorRegistry_1.registerColor)('settings.dropdownBorder', { dark: colorRegistry_1.selectBorder, light: colorRegistry_1.selectBorder, hcDark: colorRegistry_1.selectBorder, hcLight: colorRegistry_1.selectBorder }, (0, nls_1.localize)('settingsDropdownBorder', "Settings editor dropdown border."));
    exports.settingsSelectListBorder = (0, colorRegistry_1.registerColor)('settings.dropdownListBorder', { dark: colorRegistry_1.editorWidgetBorder, light: colorRegistry_1.editorWidgetBorder, hcDark: colorRegistry_1.editorWidgetBorder, hcLight: colorRegistry_1.editorWidgetBorder }, (0, nls_1.localize)('settingsDropdownListBorder', "Settings editor dropdown list border. This surrounds the options and separates the options from the description."));
    // Bool control colors
    exports.settingsCheckboxBackground = (0, colorRegistry_1.registerColor)('settings.checkboxBackground', { dark: colorRegistry_1.checkboxBackground, light: colorRegistry_1.checkboxBackground, hcDark: colorRegistry_1.checkboxBackground, hcLight: colorRegistry_1.checkboxBackground }, (0, nls_1.localize)('settingsCheckboxBackground', "Settings editor checkbox background."));
    exports.settingsCheckboxForeground = (0, colorRegistry_1.registerColor)('settings.checkboxForeground', { dark: colorRegistry_1.checkboxForeground, light: colorRegistry_1.checkboxForeground, hcDark: colorRegistry_1.checkboxForeground, hcLight: colorRegistry_1.checkboxForeground }, (0, nls_1.localize)('settingsCheckboxForeground', "Settings editor checkbox foreground."));
    exports.settingsCheckboxBorder = (0, colorRegistry_1.registerColor)('settings.checkboxBorder', { dark: colorRegistry_1.checkboxBorder, light: colorRegistry_1.checkboxBorder, hcDark: colorRegistry_1.checkboxBorder, hcLight: colorRegistry_1.checkboxBorder }, (0, nls_1.localize)('settingsCheckboxBorder', "Settings editor checkbox border."));
    // Text control colors
    exports.settingsTextInputBackground = (0, colorRegistry_1.registerColor)('settings.textInputBackground', { dark: colorRegistry_1.inputBackground, light: colorRegistry_1.inputBackground, hcDark: colorRegistry_1.inputBackground, hcLight: colorRegistry_1.inputBackground }, (0, nls_1.localize)('textInputBoxBackground', "Settings editor text input box background."));
    exports.settingsTextInputForeground = (0, colorRegistry_1.registerColor)('settings.textInputForeground', { dark: colorRegistry_1.inputForeground, light: colorRegistry_1.inputForeground, hcDark: colorRegistry_1.inputForeground, hcLight: colorRegistry_1.inputForeground }, (0, nls_1.localize)('textInputBoxForeground', "Settings editor text input box foreground."));
    exports.settingsTextInputBorder = (0, colorRegistry_1.registerColor)('settings.textInputBorder', { dark: colorRegistry_1.inputBorder, light: colorRegistry_1.inputBorder, hcDark: colorRegistry_1.inputBorder, hcLight: colorRegistry_1.inputBorder }, (0, nls_1.localize)('textInputBoxBorder', "Settings editor text input box border."));
    // Number control colors
    exports.settingsNumberInputBackground = (0, colorRegistry_1.registerColor)('settings.numberInputBackground', { dark: colorRegistry_1.inputBackground, light: colorRegistry_1.inputBackground, hcDark: colorRegistry_1.inputBackground, hcLight: colorRegistry_1.inputBackground }, (0, nls_1.localize)('numberInputBoxBackground', "Settings editor number input box background."));
    exports.settingsNumberInputForeground = (0, colorRegistry_1.registerColor)('settings.numberInputForeground', { dark: colorRegistry_1.inputForeground, light: colorRegistry_1.inputForeground, hcDark: colorRegistry_1.inputForeground, hcLight: colorRegistry_1.inputForeground }, (0, nls_1.localize)('numberInputBoxForeground', "Settings editor number input box foreground."));
    exports.settingsNumberInputBorder = (0, colorRegistry_1.registerColor)('settings.numberInputBorder', { dark: colorRegistry_1.inputBorder, light: colorRegistry_1.inputBorder, hcDark: colorRegistry_1.inputBorder, hcLight: colorRegistry_1.inputBorder }, (0, nls_1.localize)('numberInputBoxBorder', "Settings editor number input box border."));
    exports.focusedRowBackground = (0, colorRegistry_1.registerColor)('settings.focusedRowBackground', {
        dark: (0, colorRegistry_1.transparent)(colorRegistry_1.listHoverBackground, .6),
        light: (0, colorRegistry_1.transparent)(colorRegistry_1.listHoverBackground, .6),
        hcDark: null,
        hcLight: null,
    }, (0, nls_1.localize)('focusedRowBackground', "The background color of a settings row when focused."));
    exports.rowHoverBackground = (0, colorRegistry_1.registerColor)('settings.rowHoverBackground', {
        dark: (0, colorRegistry_1.transparent)(colorRegistry_1.listHoverBackground, .3),
        light: (0, colorRegistry_1.transparent)(colorRegistry_1.listHoverBackground, .3),
        hcDark: null,
        hcLight: null
    }, (0, nls_1.localize)('settings.rowHoverBackground', "The background color of a settings row when hovered."));
    exports.focusedRowBorder = (0, colorRegistry_1.registerColor)('settings.focusedRowBorder', {
        dark: colorRegistry_1.focusBorder,
        light: colorRegistry_1.focusBorder,
        hcDark: colorRegistry_1.focusBorder,
        hcLight: colorRegistry_1.focusBorder
    }, (0, nls_1.localize)('settings.focusedRowBorder', "The color of the row's top and bottom border when the row is focused."));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dGluZ3NFZGl0b3JDb2xvclJlZ2lzdHJ5LmpzIiwic291cmNlUm9vdCI6ImZpbGU6Ly8vaG9tZS9ydW5uZXIvd29yay9tb2QvbW9kL2J1aWxkdnNjb2RlL3ZzY29kZS9zcmMvIiwic291cmNlcyI6WyJ2cy93b3JrYmVuY2gvY29udHJpYi9wcmVmZXJlbmNlcy9jb21tb24vc2V0dGluZ3NFZGl0b3JDb2xvclJlZ2lzdHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Z0dBR2dHOzs7OztJQU9oRyx5QkFBeUI7SUFDWixRQUFBLHdCQUF3QixHQUFHLElBQUEsNkJBQWEsRUFBQywyQkFBMkIsRUFBRSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsRUFBRSxJQUFBLGNBQVEsRUFBQyxrQkFBa0IsRUFBRSw0REFBNEQsQ0FBQyxDQUFDLENBQUM7SUFDaFAsUUFBQSw2QkFBNkIsR0FBRyxJQUFBLDZCQUFhLEVBQUMsd0NBQXdDLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBQSwyQkFBVyxFQUFDLGdDQUF3QixFQUFFLEdBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFBLDJCQUFXLEVBQUMsZ0NBQXdCLEVBQUUsR0FBRyxDQUFDLEVBQUUsTUFBTSxFQUFFLElBQUEsMkJBQVcsRUFBQyxnQ0FBd0IsRUFBRSxHQUFHLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBQSwyQkFBVyxFQUFDLGdDQUF3QixFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsSUFBQSxjQUFRLEVBQUMsK0JBQStCLEVBQUUsNkRBQTZELENBQUMsQ0FBQyxDQUFDO0lBQ3BaLFFBQUEscUJBQXFCLEdBQUcsSUFBQSw2QkFBYSxFQUFDLGdDQUFnQyxFQUFFO1FBQ3BGLEtBQUssRUFBRSxJQUFJLGFBQUssQ0FBQyxJQUFJLFlBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FB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