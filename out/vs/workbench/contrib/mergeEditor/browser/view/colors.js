/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
define(["require", "exports", "vs/nls", "vs/platform/theme/common/colorRegistry"], function (require, exports, nls_1, colorRegistry_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.conflictInput2Background = exports.conflictInput1Background = exports.conflictingLinesBackground = exports.unhandledConflictMinimapOverViewRulerColor = exports.handledConflictMinimapOverViewRulerColor = exports.conflictBorderHandledFocused = exports.conflictBorderHandledUnfocused = exports.conflictBorderUnhandledFocused = exports.conflictBorderUnhandledUnfocused = exports.diffWordBase = exports.diffBase = exports.diffWord = exports.diff = void 0;
    exports.diff = (0, colorRegistry_1.registerColor)('mergeEditor.change.background', { dark: '#9bb95533', light: '#9bb95533', hcDark: '#9bb95533', hcLight: '#9bb95533', }, (0, nls_1.localize)('mergeEditor.change.background', 'The background color for changes.'));
    exports.diffWord = (0, colorRegistry_1.registerColor)('mergeEditor.change.word.background', { dark: '#9ccc2c33', light: '#9ccc2c66', hcDark: '#9ccc2c33', hcLight: '#9ccc2c66', }, (0, nls_1.localize)('mergeEditor.change.word.background', 'The background color for word changes.'));
    exports.diffBase = (0, colorRegistry_1.registerColor)('mergeEditor.changeBase.background', { dark: '#4B1818FF', light: '#FFCCCCFF', hcDark: '#4B1818FF', hcLight: '#FFCCCCFF', }, (0, nls_1.localize)('mergeEditor.changeBase.background', 'The background color for changes in base.'));
    exports.diffWordBase = (0, colorRegistry_1.registerColor)('mergeEditor.changeBase.word.background', { dark: '#6F1313FF', light: '#FFA3A3FF', hcDark: '#6F1313FF', hcLight: '#FFA3A3FF', }, (0, nls_1.localize)('mergeEditor.changeBase.word.background', 'The background color for word changes in base.'));
    exports.conflictBorderUnhandledUnfocused = (0, colorRegistry_1.registerColor)('mergeEditor.conflict.unhandledUnfocused.border', { dark: '#ffa6007a', light: '#ffa600FF', hcDark: '#ffa6007a', hcLight: '#ffa6007a', }, (0, nls_1.localize)('mergeEditor.conflict.unhandledUnfocused.border', 'The border color of unhandled unfocused conflicts.'));
    exports.conflictBorderUnhandledFocused = (0, colorRegistry_1.registerColor)('mergeEditor.conflict.unhandledFocused.border', { dark: '#ffa600', light: '#ffa600', hcDark: '#ffa600', hcLight: '#ffa600', }, (0, nls_1.localize)('mergeEditor.conflict.unhandledFocused.border', 'The border color of unhandled focused conflicts.'));
    exports.conflictBorderHandledUnfocused = (0, colorRegistry_1.registerColor)('mergeEditor.conflict.handledUnfocused.border', { dark: '#86868649', light: '#86868649', hcDark: '#86868649', hcLight: '#86868649', }, (0, nls_1.localize)('mergeEditor.conflict.handledUnfocused.border', 'The border color of handled unfocused conflicts.'));
    exports.conflictBorderHandledFocused = (0, colorRegistry_1.registerColor)('mergeEditor.conflict.handledFocused.border', { dark: '#c1c1c1cc', light: '#c1c1c1cc', hcDark: '#c1c1c1cc', hcLight: '#c1c1c1cc', }, (0, nls_1.localize)('mergeEditor.conflict.handledFocused.border', 'The border color of handled focused conflicts.'));
    exports.handledConflictMinimapOverViewRulerColor = (0, colorRegistry_1.registerColor)('mergeEditor.conflict.handled.minimapOverViewRuler', { dark: '#adaca8ee', light: '#adaca8ee', hcDark: '#adaca8ee', hcLight: '#adaca8ee', }, (0, nls_1.localize)('mergeEditor.conflict.handled.minimapOverViewRuler', 'The foreground color for changes in input 1.'));
    exports.unhandledConflictMinimapOverViewRulerColor = (0, colorRegistry_1.registerColor)('mergeEditor.conflict.unhandled.minimapOverViewRuler', { dark: '#fcba03FF', light: '#fcba03FF', hcDark: '#fcba03FF', hcLight: '#fcba03FF', }, (0, nls_1.localize)('mergeEditor.conflict.unhandled.minimapOverViewRuler', 'The foreground color for changes in input 1.'));
    exports.conflictingLinesBackground = (0, colorRegistry_1.registerColor)('mergeEditor.conflictingLines.background', { dark: '#ffea0047', light: '#ffea0047', hcDark: '#ffea0047', hcLight: '#ffea0047', }, (0, nls_1.localize)('mergeEditor.conflictingLines.background', 'The background of the "Conflicting Lines" text.'));
    const contentTransparency = 0.4;
    exports.conflictInput1Background = (0, colorRegistry_1.registerColor)('mergeEditor.conflict.input1.background', { dark: (0, colorRegistry_1.transparent)(colorRegistry_1.mergeCurrentHeaderBackground, contentTransparency), light: (0, colorRegistry_1.transparent)(colorRegistry_1.mergeCurrentHeaderBackground, contentTransparency), hcDark: (0, colorRegistry_1.transparent)(colorRegistry_1.mergeCurrentHeaderBackground, contentTransparency), hcLight: (0, colorRegistry_1.transparent)(colorRegistry_1.mergeCurrentHeaderBackground, contentTransparency) }, (0, nls_1.localize)('mergeEditor.conflict.input1.background', 'The background color of decorations in input 1.'));
    exports.conflictInput2Background = (0, colorRegistry_1.registerColor)('mergeEditor.conflict.input2.background', { dark: (0, colorRegistry_1.transparent)(colorRegistry_1.mergeIncomingHeaderBackground, contentTransparency), light: (0, colorRegistry_1.transparent)(colorRegistry_1.mergeIncomingHeaderBackground, contentTransparency), hcDark: (0, colorRegistry_1.transparent)(colorRegistry_1.mergeIncomingHeaderBackground, contentTransparency), hcLight: (0, colorRegistry_1.transparent)(colorRegistry_1.mergeIncomingHeaderBackground, contentTransparency) }, (0, nls_1.localize)('mergeEditor.conflict.input2.background', 'The background color of decorations in input 2.'));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JzLmpzIiwic291cmNlUm9vdCI6ImZpbGU6Ly8vaG9tZS9ydW5uZXIvd29yay9tb2QvbW9kL2J1aWxkdnNjb2RlL3ZzY29kZS9zcmMvIiwic291cmNlcyI6WyJ2cy93b3JrYmVuY2gvY29udHJpYi9tZXJnZUVkaXRvci9icm93c2VyL3ZpZXcvY29sb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Z0dBR2dHOzs7OztJQUtuRixRQUFBLElBQUksR0FBRyxJQUFBLDZCQUFhLEVBQ2hDLCtCQUErQixFQUMvQixFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxXQUFXLEdBQUcsRUFDckYsSUFBQSxjQUFRLEVBQUMsK0JBQStCLEVBQUUsbUNBQW1DLENBQUMsQ0FDOUUsQ0FBQztJQUVXLFFBQUEsUUFBUSxHQUFHLElBQUEsNkJBQWEsRUFDcEMsb0NBQW9DLEVBQ3BDLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLFdBQVcsR0FBRyxFQUNyRixJQUFBLGNBQVEsRUFBQyxvQ0FBb0MsRUFBRSx3Q0FBd0MsQ0FBQyxDQUN4RixDQUFDO0lBRVcsUUFBQSxRQUFRLEdBQUcsSUFBQSw2QkFBYSxFQUNwQyxtQ0FBbUMsRUFDbkMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsV0FBVyxHQUFHLEVBQ3JGLElBQUEsY0FBUSxFQUFDLG1DQUFtQyxFQUFFLDJDQUEyQyxDQUFDLENBQzFGLENBQUM7SUFFVyxRQUFBLFlBQVksR0FBRyxJQUFBLDZCQUFhLEVBQ3hDLHdDQUF3QyxFQUN4QyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsV0FBVyxF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